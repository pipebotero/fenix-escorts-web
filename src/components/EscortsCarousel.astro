---
const baseUrl = "/escorts/";

const { escorts }: any = Astro.props;

const getUrl = (id: number) => {
  return `${baseUrl}${id}`;
};
const getCover = (escort: any) => {
  return escort.pictures.find((p: any) => p.cover).src;
};
---

<div class="w-full flex flex-col items-center">
  <div class="flex justify-center">
    <h1 class="text-white text-3xl uppercase">Escorts</h1>
  </div>
  {
    escorts && escorts.length > 0 && (
      <div class="container mt-8">
        {escorts.map((escort: any) => (
          <a
            transition:name={`img-${escort.id}`}
            class="block bg-no-repeat bg-cover bg-[50%] bg-[url('')]"
            style={`background-image: url(${getCover(escort)})`}
            href={getUrl(escort.id)}
          >
            <div class="content">
              <h2>{escort.name}</h2>
              {/* <span>UI & UX Designer</span> */}
            </div>
          </a>
          // </a>
        ))}
      </div>
    )
  }

  <div class="flex justify-center relative mt-10">
    <a
      class="btn btn-4 btn-4c border-[#ffffff] text-white hover:bg-[#dc0000] hover:border-[#dc0000] hover:text-white uppercase icon-arrow-right"
      href="escorts">Ver Escorts</a
    >
  </div>
</div>

<style>
  .container {
    width: 100%;
    display: flex;
    justify-content: center;
    height: 500px;
    gap: 10px;

    > a {
      flex: 0 0 120px;
      border-radius: 0.5rem;
      transition: 0.5s ease-in-out;
      cursor: pointer;
      /* box-shadow: 1px 5px 15px #34312c; */
      /* box-shadow: inset 0px 0px 15px 10px #000; */
      position: relative;
      overflow: hidden;

      .content {
        font-size: 1.5rem;
        color: #fff;
        display: flex;
        align-items: center;
        padding: 15px;
        opacity: 0;
        flex-direction: column;
        height: 100%;
        justify-content: flex-end;
        background: rgb(130, 14, 0);
        background: linear-gradient(
          0deg,
          rgba(130, 14, 0, 0.6755077030812324) 0%,
          rgba(255, 255, 255, 0) 100%
        );
        transform: translatey(100%);
        transition:
          opacity 0.5s ease-in-out,
          transform 0.5s 0.2s;
        visibility: hidden;

        span {
          display: block;
          margin-top: 5px;
          font-size: 1.2rem;
        }
      }

      &:hover {
        flex: 0 0 250px;
        box-shadow: none;
        /* box-shadow: 1px 3px 15px #7e7f83; */
        /* box-shadow: inset 0px 0px 15px 10px #000; */
        transform: translatey(-30px);
      }

      &:hover .content {
        opacity: 1;
        transform: translatey(0%);
        visibility: visible;
      }
    }
  }
</style>
